syntax = "proto3";
package proto;
option go_package = "./;proto";
import "google/api/annotations.proto";
import "google/options/annotations.proto";

message UserRequest{
    string user_name = 1;
    string password = 2;
    string password_confirm = 3;
}

message UserDetailResponse {
    int32 code = 1;
    string msg = 2;
}

message GetEmoanaRequest {
    string value = 1;
}

message GetEmoanaResponse {
    string value = 1;
    string label = 2;
}

option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger)={
    security_definitions: {
        security:{
            key:"inori"
            value:{
                type:TYPE_API_KEY
                in:IN_HEADER
                name:"Anthorization"   
                description: "Authentication token, prefixed by inori: inori <token>"
            }
        }
    }

    security:{
        security_requirement:{
            key:"inori"
        }
    }

    info:{
        title:"grpc gateway emo_ana";
        version:"1.0";
        license:{
            name:"MIT";
        };
    }

    schemes:HTTPS
};

service EmoAnaService {
    rpc UserLogin(UserRequest) returns(UserDetailResponse){
        option (google.api.http)={
            post:"/emo_ana"
            body:"*"
        };
    }
    rpc UserRegister(UserRequest) returns(UserDetailResponse){
        option (google.api.http)={
            post:"/emo_ana"
            body:"*"
        };
    }
    rpc GetEmoana(GetEmoanaRequest) returns(GetEmoanaResponse){
        option (google.api.http)={
            post:"/emo_ana"
            body:"*"
        };
    }
}